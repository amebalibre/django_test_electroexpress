"""Model Class."""
from django.db import models
from datetime import date

_OUTSTOCK = 'OUTSTOCK'
_DISCONTINUED = 'DISCONTINUED'


class Product(models.Model):
    """The products represent tablets or mobiles."""

    TABLET = 'T'
    MOBILE = 'M'
    TYPE_CHOICES = (
        (TABLET, 'Tablet'),
        (MOBILE, 'Mobile'))

    name = models.CharField(
        max_length=80)

    price = models.DecimalField(
        max_digits=6,
        decimal_places=2)

    type = models.CharField(
        max_length=1,
        choices=TYPE_CHOICES,
        default=MOBILE,
        blank=True)

    stock = models.IntegerField(default=99)

    inclusion_date = models.DateField(
        null=True)

    discontinued_date = models.DateField(
        null=True,
        blank=True)

    @property
    def was_discontinued(self):
        """Check if product was discontinued or not."""
        return (
            self.discontinued_date and
            self.discontinued_date < date.today() or
            False)

    def __str__(self):
        """Verbose object."""
        pattern = '[{}] {}'
        if not self.stock and self.name:
            name = pattern.format(_OUTSTOCK, self.name)
        elif(self.was_discontinued and self.name):
            name = pattern.format(_DISCONTINUED, self.name)
        else:
            name = self.name
        return name

    def save(self, *args, **kwargs):
        """Overwrite save for autogenerated name."""
        if not self.inclusion_date:
            self.inclusion_date = date.today()
        super().save(*args, **kwargs)

    class Meta:
        """Meta data."""

        ordering = ('-discontinued_date', '-stock', 'name', 'price',)
